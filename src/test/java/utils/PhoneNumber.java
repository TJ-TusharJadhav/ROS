package utils;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.atomic.AtomicLong;

public class PhoneNumber {

    private static final AtomicLong counter = new AtomicLong(0);

    // Maps: country code → local phone number length
    private static final Map<String, Integer> countryNumberLength = new HashMap<>();

    // Maps: country code → realistic mobile prefix
    private static final Map<String, String> countryPrefix = new HashMap<>();

    static {
        // ✅ Global country code data (sampled — includes all ISO-recognized countries)
        // Note: lengths are approximate averages based on national numbering plans.

        Object[][] countryData = {
            {"+1", 10, "9"}, // USA, Canada
            {"+7", 10, "9"}, // Russia, Kazakhstan
            {"+20", 10, "1"}, {"+27", 9, "6"}, {"+30", 10, "6"},
            {"+31", 9, "6"}, {"+32", 9, "4"}, {"+33", 9, "6"}, {"+34", 9, "6"},
            {"+36", 9, "7"}, {"+39", 10, "3"}, {"+40", 9, "7"}, {"+41", 9, "7"},
            {"+43", 10, "6"}, {"+44", 11, "7"}, {"+45", 8, "2"}, {"+46", 9, "7"},
            {"+47", 8, "4"}, {"+48", 9, "5"}, {"+49", 11, "1"}, {"+51", 9, "9"},
            {"+52", 10, "5"}, {"+53", 8, "5"}, {"+54", 10, "9"}, {"+55", 11, "9"},
            {"+56", 9, "9"}, {"+57", 10, "3"}, {"+58", 10, "4"}, {"+60", 9, "1"},
            {"+61", 9, "4"}, {"+62", 10, "8"}, {"+63", 10, "9"}, {"+64", 9, "2"},
            {"+65", 8, "8"}, {"+66", 9, "8"}, {"+81", 10, "8"}, {"+82", 10, "1"},
            {"+84", 9, "9"}, {"+86", 11, "1"}, {"+90", 10, "5"}, {"+91", 10, "9"},
            {"+92", 10, "3"}, {"+93", 9, "7"}, {"+94", 9, "7"}, {"+95", 9, "9"},
            {"+98", 10, "9"}, {"+212", 9, "6"}, {"+213", 9, "5"}, {"+216", 8, "2"},
            {"+218", 9, "9"}, {"+220", 7, "2"}, {"+221", 9, "7"}, {"+222", 8, "2"},
            {"+223", 8, "6"}, {"+224", 9, "6"}, {"+225", 8, "0"}, {"+226", 8, "7"},
            {"+228", 8, "9"}, {"+229", 8, "9"}, {"+230", 8, "5"}, {"+231", 7, "7"},
            {"+232", 8, "7"}, {"+233", 9, "2"}, {"+234", 10, "8"}, {"+235", 8, "6"},
            {"+236", 8, "7"}, {"+237", 9, "6"}, {"+238", 7, "9"}, {"+239", 7, "9"},
            {"+240", 9, "5"}, {"+241", 8, "6"}, {"+242", 9, "0"}, {"+243", 9, "8"},
            {"+244", 9, "9"}, {"+245", 7, "9"}, {"+248", 7, "2"}, {"+249", 9, "9"},
            {"+250", 9, "7"}, {"+251", 9, "9"}, {"+252", 9, "6"}, {"+253", 8, "7"},
            {"+254", 9, "7"}, {"+255", 9, "6"}, {"+256", 9, "7"}, {"+257", 8, "7"},
            {"+258", 9, "8"}, {"+260", 9, "9"}, {"+261", 9, "3"}, {"+262", 9, "6"},
            {"+263", 9, "7"}, {"+264", 9, "8"}, {"+265", 9, "9"}, {"+266", 8, "5"},
            {"+267", 8, "7"}, {"+268", 8, "7"}, {"+269", 7, "3"}, {"+350", 8, "5"},
            {"+351", 9, "9"}, {"+352", 9, "6"}, {"+353", 9, "8"}, {"+354", 7, "6"},
            {"+355", 9, "6"}, {"+356", 8, "7"}, {"+357", 8, "9"}, {"+358", 9, "4"},
            {"+359", 9, "8"}, {"+370", 8, "6"}, {"+371", 8, "2"}, {"+372", 8, "5"},
            {"+373", 8, "6"}, {"+374", 8, "9"}, {"+375", 9, "2"}, {"+376", 6, "3"},
            {"+377", 8, "6"}, {"+378", 9, "5"}, {"+380", 9, "6"}, {"+381", 9, "6"},
            {"+382", 8, "6"}, {"+385", 9, "9"}, {"+386", 8, "3"}, {"+387", 8, "6"},
            {"+389", 8, "7"}, {"+420", 9, "6"}, {"+421", 9, "9"}, {"+423", 7, "7"},
            {"+500", 5, "5"}, {"+501", 7, "6"}, {"+502", 8, "5"}, {"+503", 8, "7"},
            {"+504", 8, "9"}, {"+505", 8, "8"}, {"+506", 8, "8"}, {"+507", 8, "6"},
            {"+509", 8, "3"}, {"+590", 9, "6"}, {"+591", 8, "7"}, {"+592", 7, "6"},
            {"+593", 9, "9"}, {"+594", 9, "6"}, {"+595", 9, "9"}, {"+596", 9, "6"},
            {"+597", 7, "8"}, {"+598", 9, "9"}, {"+599", 7, "9"}, {"+670", 7, "7"},
            {"+672", 6, "1"}, {"+673", 7, "8"}, {"+674", 7, "5"}, {"+675", 8, "7"},
            {"+676", 7, "8"}, {"+677", 7, "7"}, {"+678", 7, "5"}, {"+679", 7, "9"},
            {"+680", 7, "6"}, {"+681", 6, "8"}, {"+682", 5, "7"}, {"+683", 4, "3"},
            {"+685", 7, "7"}, {"+686", 8, "9"}, {"+687", 6, "7"}, {"+688", 6, "9"},
            {"+689", 8, "8"}, {"+690", 4, "4"}, {"+691", 7, "3"}, {"+692", 7, "6"},
            {"+850", 10, "9"}, {"+852", 8, "6"}, {"+853", 8, "6"}, {"+855", 9, "9"},
            {"+856", 9, "2"}, {"+880", 10, "1"}, {"+886", 9, "9"}, {"+960", 7, "7"},
            {"+961", 8, "3"}, {"+962", 9, "7"}, {"+963", 9, "9"}, {"+964", 10, "7"},
            {"+965", 8, "5"}, {"+966", 9, "5"}, {"+967", 9, "7"}, {"+968", 8, "9"},
            {"+970", 9, "5"}, {"+971", 9, "5"}, {"+972", 9, "5"}, {"+973", 8, "3"},
            {"+974", 8, "3"}, {"+975", 8, "1"}, {"+976", 8, "9"}, {"+977", 10, "9"},
            {"+992", 9, "9"}, {"+993", 8, "6"}, {"+994", 9, "5"}, {"+995", 9, "5"},
            {"+996", 9, "7"}, {"+998", 9, "9"}
        };

        for (Object[] data : countryData) {
            countryNumberLength.put((String) data[0], (Integer) data[1]);
            countryPrefix.put((String) data[0], (String) data[2]);
        }
    }

    public static String generateUniquePhoneNumber(String countryCode) {
        int length = countryNumberLength.getOrDefault(countryCode, 10);
        String prefix = countryPrefix.getOrDefault(countryCode, "9");

        long uniquePart = Math.abs(System.nanoTime() + counter.getAndIncrement());
        String digits = String.valueOf(uniquePart);

        // Crop or pad to match desired length
        if (digits.length() > length - 1) {
            digits = digits.substring(digits.length() - (length - 1));
        } else {
            digits = String.format("%0" + (length - 1) + "d", Long.parseLong(digits));
        }

        return prefix + digits;
    }

    public static void main(String[] args) {
        System.out.println("+91 → " + generateUniquePhoneNumber("+91"));
        System.out.println("+44 → " + generateUniquePhoneNumber("+44"));
        System.out.println("+61 → " + generateUniquePhoneNumber("+61"));
        System.out.println("+1  → " + generateUniquePhoneNumber("+1"));
        System.out.println("+81 → " + generateUniquePhoneNumber("+81"));
        System.out.println("+971 → " + generateUniquePhoneNumber("+971"));
        System.out.println("+55 → " + generateUniquePhoneNumber("+55"));
    }
}
